import { NextApiRequest, NextApiResponse } from "next";
import { OpenAI } from "openai";

const openai = new OpenAI({ apiKey: process.env.OPENAI_API_KEY });

export default async function handler(req: NextApiRequest, res: NextApiResponse) {
  if (req.method !== "POST") {
    return res.status(405).json({ error: "Method not allowed" });
  }

  const { name, description, audience, problem, existing } = req.body;

  const prompt = `
–¢—ã ‚Äî –æ–ø—ã—Ç–Ω—ã–π —Å—Ç–∞—Ä—Ç–∞–ø-–∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç —Å –ø—Ä–∞–∫—Ç–∏–∫–æ–π –æ—Ü–µ–Ω–∫–∏ –±–æ–ª–µ–µ 500+ –∏–¥–µ–π. –¢–≤–æ—è –∑–∞–¥–∞—á–∞ ‚Äî –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –∏–¥–µ—é –ø—Ä–æ–µ–∫—Ç–∞ –ø–æ —Å–ª–µ–¥—É—é—â–∏–º –¥–∞–Ω–Ω—ã–º:

–ù–∞–∑–≤–∞–Ω–∏–µ: ${name}
–û–ø–∏—Å–∞–Ω–∏–µ: ${description}
–¶–µ–ª–µ–≤–∞—è –∞—É–¥–∏—Ç–æ—Ä–∏—è: ${audience}
–ü—Ä–æ–±–ª–µ–º–∞: ${problem}
–°—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Ä–µ—à–µ–Ω–∏—è: ${existing}

üîç –ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π –∏–¥–µ—é, —Å—Ç—Ä–æ–≥–æ —Å–ª–µ–¥—É—è —Å—Ç—Ä—É–∫—Ç—É—Ä–µ –Ω–∏–∂–µ. –ë—É–¥—å –∫—Ä–∞—Ç–∫–∏–º, —Ç–æ—á–Ω—ã–º, –ø—Ä–∞–≥–º–∞—Ç–∏—á–Ω—ã–º. –£—á–∏—Ç—ã–≤–∞–π —Ä–∏—Å–∫–∏, –∫–æ–Ω–∫—É—Ä–µ–Ω—Ü–∏—é, —Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω–æ—Å—Ç—å –∑–∞–ø—É—Å–∫–∞.

–û—Ç–≤–µ—Ç –æ—Ñ–æ—Ä–º–∏ —Å—Ç—Ä–æ–≥–æ –ø–æ —Å–ª–µ–¥—É—é—â–µ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–µ (—Ç–∞–±–ª–∏—á–Ω–∞—è —Ñ–æ—Ä–º–∞ –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è):

1. **–°–µ–≥–º–µ–Ω—Ç –∏ –Ω–∏—à–∞ —Ä—ã–Ω–∫–∞** ‚Äî –∫—Ç–æ –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–µ –∫–ª–∏–µ–Ω—Ç—ã, –≥–¥–µ –∏—Å–∫–∞—Ç—å –ø–µ—Ä–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
2. **–ü–æ—Ç–µ–Ω—Ü–∏–∞–ª —Ä—ã–Ω–∫–∞** ‚Äî –∫—Ä–∞—Ç–∫–∞—è –æ—Ü–µ–Ω–∫–∞: –≤—ã—Å–æ–∫–∏–π / —Å—Ä–µ–¥–Ω–∏–π / –Ω–∏–∑–∫–∏–π + –ø–æ—á–µ–º—É
3. **–†–∏—Å–∫–∏ –∏ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è** ‚Äî —Å–ª–∞–±—ã–µ –º–µ—Å—Ç–∞ –∏–¥–µ–∏, —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ/–±–∏–∑–Ω–µ—Å-—Ä–∏—Å–∫–∏
4. **–ö–æ–Ω–∫—É—Ä–µ–Ω—Ç—ã** ‚Äî —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Ä–µ—à–µ–Ω–∏—è, –∏—Ö —Å–∏–ª—å–Ω—ã–µ –∏ —Å–ª–∞–±—ã–µ —Å—Ç–æ—Ä–æ–Ω—ã
5. **–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ MVP** ‚Äî —á—Ç–æ —Å—Ç–æ–∏—Ç –≤–∫–ª—é—á–∏—Ç—å –≤ –ø–µ—Ä–≤—É—é –≤–µ—Ä—Å–∏—é –ø—Ä–æ–¥—É–∫—Ç–∞
6. **–û—Ü–µ–Ω–∫–∞ —Ä–µ–∞–ª–∏–∑—É–µ–º–æ—Å—Ç–∏** ‚Äî –æ—Ç 1 –¥–æ 5 –∏ –∫—Ä–∞—Ç–∫–æ–µ –æ–±–æ—Å–Ω–æ–≤–∞–Ω–∏–µ

–ï—Å–ª–∏ —Ç—ã —Å—á–∏—Ç–∞–µ—à—å, —á—Ç–æ –∏–¥–µ—è —Å–ª–∏—à–∫–æ–º –æ–±—â–∞—è –∏–ª–∏ –Ω–µ–æ—Å—É—â–µ—Å—Ç–≤–∏–º–∞—è ‚Äî —É–∫–∞–∂–∏ —ç—Ç–æ –≤ –±–ª–æ–∫–µ ‚Äú–†–∏—Å–∫–∏‚Äù.

–ó–∞–≤–µ—Ä—à–∏ –æ—Ç—á—ë—Ç –∫–æ—Ä–æ—Ç–∫–∏–º —Å–∞–º–æ—Ä–µ–≤—å—é: –µ—Å—Ç—å –ª–∏ –≤ —Ç–≤–æ—ë–º –æ—Ç–≤–µ—Ç–µ —Å–ª–∞–±—ã–µ –º–µ—Å—Ç–∞ –∏–ª–∏ –Ω–µ–æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω–æ—Å—Ç–∏?
`;


  try {
    const completion = await openai.chat.completions.create({
      model: "gpt-4-turbo",
      messages: [{ role: "user", content: prompt }],
      temperature: 0.7,
    });

    const result = completion.choices[0].message.content;
    res.status(200).json({ result });
  } catch (err) {
    console.error("OpenAI error:", err);
    res.status(500).json({ error: "–û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏" });
  }
}
